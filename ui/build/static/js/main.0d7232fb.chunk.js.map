{"version":3,"sources":["http-common.js","services/tutorial.service.js","components/add-tutorial.component.js","components/tutorial.component.js","components/tutorials-list.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","get","create","baseURL","process","REACT_APP_API_BASE_URL","headers","Content-type","tutorial_service","http","id","concat","data","post","put","delete","title","AddTutorial","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeTitle","bind","assertThisInitialized","onChangeDescription","saveTutorial","newTutorial","state","description","published","submitted","e","setState","target","value","_this2","TutorialDataService","then","response","console","log","catch","react_default","a","createElement","className","onClick","htmlFor","type","required","onChange","name","Component","Tutorial","getTutorial","updatePublished","updateTutorial","deleteTutorial","currentTutorial","message","match","params","prevState","objectSpread","status","_this3","update","_this4","_this5","history","push","_this6","TutorialsList","onChangeSearchTitle","retrieveTutorials","refreshList","setActiveTutorial","removeAllTutorials","searchTitle","tutorials","currentIndex","getAll","tutorial","index","deleteAll","findByTitle","_this$state","placeholder","map","key","react_router_dom","to","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.0d7232fb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.get('http://localhost:8081')\r\n\r\nexport default axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api',\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\n\r\n\r\nclass TutorialDataService {\r\n\r\n    getAll() {\r\n      \r\n    return http.get(\"/tutorials\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/tutorials/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"api/tutorials\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/tutorials/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/tutorials/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/tutorials`);\r\n  }\r\n\r\n  findByTitle(title) {\r\n    return http.get(`/tutorials?title=${title}`);\r\n  }\r\n}\r\n\r\nexport default new TutorialDataService();","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\nexport default class AddTutorial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\", \r\n      published: false,\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  saveTutorial() {\r\n    var data = {\r\n      title: this.state.title,\r\n      description: this.state.description\r\n    };\r\n\r\n    TutorialDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          description: response.data.description,\r\n          published: response.data.published,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n          console.log(e);\r\n\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      published: false,\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"title\"\r\n                required\r\n                value={this.state.title}\r\n                onChange={this.onChangeTitle}\r\n                name=\"title\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\nexport default class Tutorial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.getTutorial = this.getTutorial.bind(this);\r\n    this.updatePublished = this.updatePublished.bind(this);\r\n    this.updateTutorial = this.updateTutorial.bind(this);\r\n    this.deleteTutorial = this.deleteTutorial.bind(this);\r\n\r\n    this.state = {\r\n      currentTutorial: {\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        published: false\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTutorial(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    const title = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentTutorial: {\r\n          ...prevState.currentTutorial,\r\n          title: title\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentTutorial: {\r\n        ...prevState.currentTutorial,\r\n        description: description\r\n      }\r\n    }));\r\n  }\r\n\r\n  getTutorial(id) {\r\n    TutorialDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentTutorial: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePublished(status) {\r\n    var data = {\r\n      id: this.state.currentTutorial.id,\r\n      title: this.state.currentTutorial.title,\r\n      description: this.state.currentTutorial.description,\r\n      published: status\r\n    };\r\n\r\n    TutorialDataService.update(this.state.currentTutorial.id, data)\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          currentTutorial: {\r\n            ...prevState.currentTutorial,\r\n            published: status\r\n          }\r\n        }));\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateTutorial() {\r\n    TutorialDataService.update(\r\n      this.state.currentTutorial.id,\r\n      this.state.currentTutorial\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The tutorial was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteTutorial() {    \r\n    TutorialDataService.delete(this.state.currentTutorial.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/tutorials')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentTutorial } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentTutorial ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Tutorial</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={currentTutorial.title}\r\n                  onChange={this.onChangeTitle}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={currentTutorial.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>\r\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n              </div>\r\n            </form>\r\n\r\n            {currentTutorial.published ? (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => this.updatePublished(false)}\r\n              >\r\n                UnPublish\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => this.updatePublished(true)}\r\n              >\r\n                Publish\r\n              </button>\r\n            )}\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteTutorial}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateTutorial}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Tutorial...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class TutorialsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n    this.retrieveTutorials = this.retrieveTutorials.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\r\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\r\n    this.searchTitle = this.searchTitle.bind(this);\r\n\r\n    this.state = {\r\n      tutorials: [],\r\n      currentTutorial: null,\r\n      currentIndex: -1,\r\n      searchTitle: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveTutorials();\r\n  }\r\n\r\n  onChangeSearchTitle(e) {\r\n    const searchTitle = e.target.value;\r\n\r\n    this.setState({\r\n      searchTitle: searchTitle\r\n    });\r\n  }\r\n\r\n  retrieveTutorials() {\r\n    TutorialDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          tutorials: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveTutorials();\r\n    this.setState({\r\n      currentTutorial: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveTutorial(tutorial, index) {\r\n    this.setState({\r\n      currentTutorial: tutorial,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllTutorials() {\r\n    TutorialDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchTitle() {\r\n    this.setState({\r\n      currentTutorial: null,\r\n      currentIndex: -1\r\n    });\r\n\r\n    TutorialDataService.findByTitle(this.state.searchTitle)\r\n      .then(response => {\r\n        this.setState({\r\n          tutorials: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n      const { searchTitle, tutorials, currentTutorial, currentIndex } = this.state;\r\n\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by title\"\r\n              value={searchTitle}\r\n              onChange={this.onChangeSearchTitle}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchTitle}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Tutorials List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {tutorials &&\r\n              tutorials.map((tutorial, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\r\n                  key={index}\r\n                >\r\n                  {tutorial.title}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllTutorials}\r\n          >\r\n            Remove All\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentTutorial ? (\r\n            <div>\r\n              <h4>Tutorial</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Title:</strong>\r\n                </label>{\" \"}\r\n                {currentTutorial.title}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Description:</strong>\r\n                </label>{\" \"}\r\n                {currentTutorial.description}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>{\" \"}\r\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/tutorials/\" + currentTutorial.id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Tutorial...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AddTutorial from \"./components/add-tutorial.component\";\r\nimport Tutorial from \"./components/tutorial.component\";\r\nimport TutorialsList from \"./components/tutorials-list.component\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link to={\"/tutorials\"} className=\"navbar-brand\">\r\n            UkraineLodgeService\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/tutorials\"} className=\"nav-link\">\r\n                Unterkuenfte\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/add\"} className=\"nav-link\">\r\n                Add\r\n              </Link>\r\n            </li>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\r\n            <Route exact path=\"/add\" component={AddTutorial} />\r\n            <Route path=\"/tutorials/:id\" component={Tutorial} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}